{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "previousBlockhash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "multicall(bytes32,bytes[])": "1f0464d1",
    "multicall(bytes[])": "ac9650d8",
    "multicall(uint256,bytes[])": "5ae401dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"previousBlockhash\":\"The expected parent blockHash\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(uint256,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"deadline\":\"The time by which this function must be called before failing\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"MulticallExtended interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(uint256,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract with optional validation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMulticallExtended.sol\":\"IMulticallExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mageswap/=node_modules/@mageswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/IMulticallExtended.sol\":{\"keccak256\":\"0xf2f6cf20200e265bfefc6f31f8dd3fa7af97d02d7cdae8734d1aaf17142653f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b14a85ea54409d8cc45c2148a4349e99fab1d48c80f941fd434cf87f9a08355\",\"dweb:/ipfs/QmQ83pfwMVMKkso7AeKHSxyQrMDufqEYzLyHQwz5p2YGW6\"]},\"node_modules/@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "previousBlockhash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "previousBlockhash": "The expected parent blockHash"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "multicall(uint256,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "deadline": "The time by which this function must be called before failing"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(uint256,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mageswap/=node_modules/@mageswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/IMulticallExtended.sol": "IMulticallExtended"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IMulticallExtended.sol": {
        "keccak256": "0xf2f6cf20200e265bfefc6f31f8dd3fa7af97d02d7cdae8734d1aaf17142653f2",
        "urls": [
          "bzz-raw://2b14a85ea54409d8cc45c2148a4349e99fab1d48c80f941fd434cf87f9a08355",
          "dweb:/ipfs/QmQ83pfwMVMKkso7AeKHSxyQrMDufqEYzLyHQwz5p2YGW6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IMulticallExtended.sol",
    "id": 2543,
    "exportedSymbols": {
      "IMulticall": [
        10250
      ],
      "IMulticallExtended": [
        2542
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1484:13",
    "nodes": [
      {
        "id": 2512,
        "nodeType": "PragmaDirective",
        "src": "45:24:13",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 2513,
        "nodeType": "PragmaDirective",
        "src": "70:19:13",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 2514,
        "nodeType": "ImportDirective",
        "src": "91:68:13",
        "nodes": [],
        "absolutePath": "node_modules/@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol",
        "file": "@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol",
        "scope": 2543,
        "sourceUnit": 10251,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2542,
        "nodeType": "ContractDefinition",
        "src": "303:1225:13",
        "nodes": [
          {
            "id": 2529,
            "nodeType": "FunctionDefinition",
            "src": "821:110:13",
            "nodes": [],
            "documentation": {
              "id": 2518,
              "nodeType": "StructuredDocumentation",
              "src": "352:464:13",
              "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param deadline The time by which this function must be called before failing\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
            },
            "functionSelector": "5ae401dc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "parameters": {
              "id": 2524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "840:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2523,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "858:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2521,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "858:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2522,
                    "nodeType": "ArrayTypeName",
                    "src": "858:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:41:13"
            },
            "returnParameters": {
              "id": 2528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2527,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "907:22:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2525,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "907:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2526,
                    "nodeType": "ArrayTypeName",
                    "src": "907:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "906:24:13"
            },
            "scope": 2542,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2541,
            "nodeType": "FunctionDefinition",
            "src": "1383:143:13",
            "nodes": [],
            "documentation": {
              "id": 2530,
              "nodeType": "StructuredDocumentation",
              "src": "937:441:13",
              "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param previousBlockhash The expected parent blockHash\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
            },
            "functionSelector": "1f0464d1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "parameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "previousBlockhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2541,
                  "src": "1402:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2535,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2541,
                  "src": "1429:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2533,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1429:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2534,
                    "nodeType": "ArrayTypeName",
                    "src": "1429:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:50:13"
            },
            "returnParameters": {
              "id": 2540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 2541,
                  "src": "1502:22:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2537,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1502:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2538,
                    "nodeType": "ArrayTypeName",
                    "src": "1502:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:24:13"
            },
            "scope": 2542,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2516,
              "name": "IMulticall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10250,
              "src": "335:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticall_$10250",
                "typeString": "contract IMulticall"
              }
            },
            "id": 2517,
            "nodeType": "InheritanceSpecifier",
            "src": "335:10:13"
          }
        ],
        "contractDependencies": [
          10250
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 2515,
          "nodeType": "StructuredDocumentation",
          "src": "161:142:13",
          "text": "@title MulticallExtended interface\n @notice Enables calling multiple methods in a single call to the contract with optional validation"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          2542,
          10250
        ],
        "name": "IMulticallExtended",
        "scope": 2543
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 13
}