{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "previousBlockhash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "multicall(bytes32,bytes[])": "1f0464d1",
    "multicall(bytes[])": "ac9650d8",
    "multicall(uint256,bytes[])": "5ae401dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"previousBlockhash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"previousBlockhash\":\"The expected parent blockHash\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"multicall(uint256,bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\",\"deadline\":\"The time by which this function must be called before failing\"},\"returns\":{\"_0\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes32,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"multicall(uint256,bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/MulticallExtended.sol\":\"MulticallExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mageswap/=node_modules/@mageswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/base/MulticallExtended.sol\":{\"keccak256\":\"0x3ed53d5df38026ae2e81f8f8cfe0d1b3aceb154e81766a51e9542d542640b2f6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://374fda674e68ce9fe3dd7ef4dfd7b9714aea803466e223380f20f8869dba5d48\",\"dweb:/ipfs/Qmc9reiYBSDVWkby9dP89smuDENiy52bACaaFaQgZ4ZUnE\"]},\"contracts/base/PeripheryValidationExtended.sol\":{\"keccak256\":\"0xbcb53f6802137e89666397c550380a5e8341e940120e1f603233541720d825e3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9cad90c99189ae198f433b83cbb479b8d9d99bbcc143785c77dd367e858a095b\",\"dweb:/ipfs/QmX7iZ5g7a2dbUTbb58wjh9quMRYWGVgEnujmdbDfGQ713\"]},\"contracts/interfaces/IMulticallExtended.sol\":{\"keccak256\":\"0xf2f6cf20200e265bfefc6f31f8dd3fa7af97d02d7cdae8734d1aaf17142653f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b14a85ea54409d8cc45c2148a4349e99fab1d48c80f941fd434cf87f9a08355\",\"dweb:/ipfs/QmQ83pfwMVMKkso7AeKHSxyQrMDufqEYzLyHQwz5p2YGW6\"]},\"node_modules/@mageswap/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93\",\"dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b\"]},\"node_modules/@mageswap/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803\",\"dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER\"]},\"node_modules/@mageswap/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e\",\"dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A\"]},\"node_modules/@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "previousBlockhash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "previousBlockhash": "The expected parent blockHash"
            },
            "returns": {
              "_0": "The results from each of the calls passed in via data"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "multicall(uint256,bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract",
              "deadline": "The time by which this function must be called before failing"
            },
            "returns": {
              "_0": "The results from each of the calls passed in via data"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "multicall(bytes32,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "multicall(uint256,bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mageswap/=node_modules/@mageswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/base/MulticallExtended.sol": "MulticallExtended"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/base/MulticallExtended.sol": {
        "keccak256": "0x3ed53d5df38026ae2e81f8f8cfe0d1b3aceb154e81766a51e9542d542640b2f6",
        "urls": [
          "bzz-raw://374fda674e68ce9fe3dd7ef4dfd7b9714aea803466e223380f20f8869dba5d48",
          "dweb:/ipfs/Qmc9reiYBSDVWkby9dP89smuDENiy52bACaaFaQgZ4ZUnE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/base/PeripheryValidationExtended.sol": {
        "keccak256": "0xbcb53f6802137e89666397c550380a5e8341e940120e1f603233541720d825e3",
        "urls": [
          "bzz-raw://9cad90c99189ae198f433b83cbb479b8d9d99bbcc143785c77dd367e858a095b",
          "dweb:/ipfs/QmX7iZ5g7a2dbUTbb58wjh9quMRYWGVgEnujmdbDfGQ713"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IMulticallExtended.sol": {
        "keccak256": "0xf2f6cf20200e265bfefc6f31f8dd3fa7af97d02d7cdae8734d1aaf17142653f2",
        "urls": [
          "bzz-raw://2b14a85ea54409d8cc45c2148a4349e99fab1d48c80f941fd434cf87f9a08355",
          "dweb:/ipfs/QmQ83pfwMVMKkso7AeKHSxyQrMDufqEYzLyHQwz5p2YGW6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/base/BlockTimestamp.sol": {
        "keccak256": "0x1aa66f71234064a0c0976f62233f2edbd69554e5ad817dc97f318bc8e11f4da6",
        "urls": [
          "bzz-raw://b3a40450e9d6b0f9cb91b40ffd6215612505bd74e7d954529958f4edc6ee7b93",
          "dweb:/ipfs/QmewsUCHK5N5KhNtqEwK8JgsXFADyFBrQRS5HoDWM5gi3b"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/base/Multicall.sol": {
        "keccak256": "0xfcfd78c62d2145634a791d5680a1af7055fbd301c415d29c09333c99c37d9037",
        "urls": [
          "bzz-raw://0d1c8f4a18cec8ad49e5269c5b07c7f6fd497dfc1b7b777f8ddcfb8055efd803",
          "dweb:/ipfs/QmdeCTnfHM3RGtQuo3DMX9m7gPspGGwQp7ho6m9cJjjnER"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/base/PeripheryValidation.sol": {
        "keccak256": "0xc736bab599912d6212e8414ee4ba7af0c1e08ff6aa11caa85f5f6e07f7d421c3",
        "urls": [
          "bzz-raw://06f6c13a86900c71fa486fc029a59d1b7eb96162bb42885b5f845d995294893e",
          "dweb:/ipfs/QmUcBxMsmncw9n6eXhzzwSasGBvBGKH5FT8HSrAxrsXV4A"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/base/MulticallExtended.sol",
    "id": 1643,
    "exportedSymbols": {
      "BlockTimestamp": [
        9506
      ],
      "IMulticall": [
        10250
      ],
      "IMulticallExtended": [
        2542
      ],
      "Multicall": [
        9591
      ],
      "MulticallExtended": [
        1642
      ],
      "PeripheryValidation": [
        10033
      ],
      "PeripheryValidationExtended": [
        2335
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:959:5",
    "nodes": [
      {
        "id": 1588,
        "nodeType": "PragmaDirective",
        "src": "45:23:5",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 1589,
        "nodeType": "PragmaDirective",
        "src": "69:19:5",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 1590,
        "nodeType": "ImportDirective",
        "src": "90:61:5",
        "nodes": [],
        "absolutePath": "node_modules/@mageswap/v3-periphery/contracts/base/Multicall.sol",
        "file": "@mageswap/v3-periphery/contracts/base/Multicall.sol",
        "scope": 1643,
        "sourceUnit": 9592,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1591,
        "nodeType": "ImportDirective",
        "src": "153:46:5",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IMulticallExtended.sol",
        "file": "../interfaces/IMulticallExtended.sol",
        "scope": 1643,
        "sourceUnit": 2543,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1592,
        "nodeType": "ImportDirective",
        "src": "200:49:5",
        "nodes": [],
        "absolutePath": "contracts/base/PeripheryValidationExtended.sol",
        "file": "../base/PeripheryValidationExtended.sol",
        "scope": 1643,
        "sourceUnit": 2336,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1642,
        "nodeType": "ContractDefinition",
        "src": "350:653:5",
        "nodes": [
          {
            "id": 1620,
            "nodeType": "FunctionDefinition",
            "src": "493:218:5",
            "nodes": [],
            "body": {
              "id": 1619,
              "nodeType": "Block",
              "src": "672:39:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1616,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "699:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "id": 1615,
                      "name": "multicall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9590,
                      "src": "689:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes calldata[] calldata) returns (bytes memory[] memory)"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1614,
                  "id": 1618,
                  "nodeType": "Return",
                  "src": "682:22:5"
                }
              ]
            },
            "baseFunctions": [
              2529
            ],
            "documentation": {
              "id": 1600,
              "nodeType": "StructuredDocumentation",
              "src": "454:34:5",
              "text": "@inheritdoc IMulticallExtended"
            },
            "functionSelector": "5ae401dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1609,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1602,
                    "src": "625:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1610,
                "modifierName": {
                  "id": 1608,
                  "name": "checkDeadline",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10032,
                  "src": "611:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "611:23:5"
              }
            ],
            "name": "multicall",
            "overrides": {
              "id": 1607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "594:8:5"
            },
            "parameters": {
              "id": 1606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "512:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "530:21:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1603,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "530:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1604,
                    "nodeType": "ArrayTypeName",
                    "src": "530:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "511:41:5"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1620,
                  "src": "652:14:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1611,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "652:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1612,
                    "nodeType": "ArrayTypeName",
                    "src": "652:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:16:5"
            },
            "scope": 1642,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1641,
            "nodeType": "FunctionDefinition",
            "src": "756:245:5",
            "nodes": [],
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "962:39:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1637,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1626,
                        "src": "989:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "id": 1636,
                      "name": "multicall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9590,
                      "src": "979:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes calldata[] calldata) returns (bytes memory[] memory)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "979:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1635,
                  "id": 1639,
                  "nodeType": "Return",
                  "src": "972:22:5"
                }
              ]
            },
            "baseFunctions": [
              2541
            ],
            "documentation": {
              "id": 1621,
              "nodeType": "StructuredDocumentation",
              "src": "717:34:5",
              "text": "@inheritdoc IMulticallExtended"
            },
            "functionSelector": "1f0464d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1630,
                    "name": "previousBlockhash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1623,
                    "src": "906:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1631,
                "modifierName": {
                  "id": 1629,
                  "name": "checkPreviousBlockhash",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2334,
                  "src": "883:22:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "883:41:5"
              }
            ],
            "name": "multicall",
            "overrides": {
              "id": 1628,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "866:8:5"
            },
            "parameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1623,
                  "mutability": "mutable",
                  "name": "previousBlockhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "775:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1626,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "802:21:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1624,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "802:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1625,
                    "nodeType": "ArrayTypeName",
                    "src": "802:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "774:50:5"
            },
            "returnParameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "942:14:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1632,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "942:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 1633,
                    "nodeType": "ArrayTypeName",
                    "src": "942:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "941:16:5"
            },
            "scope": 1642,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1594,
              "name": "IMulticallExtended",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2542,
              "src": "389:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticallExtended_$2542",
                "typeString": "contract IMulticallExtended"
              }
            },
            "id": 1595,
            "nodeType": "InheritanceSpecifier",
            "src": "389:18:5"
          },
          {
            "baseName": {
              "id": 1596,
              "name": "Multicall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9591,
              "src": "409:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multicall_$9591",
                "typeString": "contract Multicall"
              }
            },
            "id": 1597,
            "nodeType": "InheritanceSpecifier",
            "src": "409:9:5"
          },
          {
            "baseName": {
              "id": 1598,
              "name": "PeripheryValidationExtended",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2335,
              "src": "420:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PeripheryValidationExtended_$2335",
                "typeString": "contract PeripheryValidationExtended"
              }
            },
            "id": 1599,
            "nodeType": "InheritanceSpecifier",
            "src": "420:27:5"
          }
        ],
        "contractDependencies": [
          2335,
          2542,
          9506,
          9591,
          10033,
          10250
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1593,
          "nodeType": "StructuredDocumentation",
          "src": "251:99:5",
          "text": "@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1642,
          2335,
          10033,
          9506,
          9591,
          2542,
          10250
        ],
        "name": "MulticallExtended",
        "scope": 1643
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 5
}