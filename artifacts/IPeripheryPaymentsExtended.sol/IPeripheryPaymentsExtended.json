{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "wrapETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "pull(address,uint256)": "f2d5d56b",
    "refundETH()": "12210e8a",
    "sweepToken(address,uint256)": "e90a182f",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "unwrapWETH9(uint256)": "49616997",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "wrapETH(uint256)": "1c58db4f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"wrapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pull(address,uint256)\":{\"params\":{\"token\":\"The token to pull\",\"value\":\"The amount to pay\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"token\":\"The contract address of the token which will be transferred to msg.sender\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"wrapETH(uint256)\":{\"details\":\"The resulting WETH9 is custodied by the router, thus will require further distribution\",\"params\":{\"value\":\"The amount of ETH to wrap\"}}},\"title\":\"Periphery Payments Extended\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pull(address,uint256)\":{\"notice\":\"Transfers the specified amount of a token from the msg.sender to address(this)\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256)\":{\"notice\":\"Transfers the full amount of a token held by this contract to msg.sender\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to msg.sender as ETH.\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"wrapETH(uint256)\":{\"notice\":\"Wraps the contract's ETH balance into WETH9\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH and tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPeripheryPaymentsExtended.sol\":\"IPeripheryPaymentsExtended\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mageswap/=node_modules/@mageswap/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/IPeripheryPaymentsExtended.sol\":{\"keccak256\":\"0x185c756302175e8f8a5e39935c0426ea866768caa7315bffd67d9bb1edea8865\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d79bbc30538a82bb89d677e2fcf11126523349bbc4ce51624ddf01da93cd94d1\",\"dweb:/ipfs/QmQDWSX7UgGY3xLYQk2Vy3Z2o9XDHtz3QpkkUVFukpZWyV\"]},\"node_modules/@mageswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "pull"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapETH"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "pull(address,uint256)": {
            "params": {
              "token": "The token to pull",
              "value": "The amount to pay"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "sweepToken(address,uint256)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "token": "The contract address of the token which will be transferred to msg.sender"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "unwrapWETH9(uint256)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "wrapETH(uint256)": {
            "details": "The resulting WETH9 is custodied by the router, thus will require further distribution",
            "params": {
              "value": "The amount of ETH to wrap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "pull(address,uint256)": {
            "notice": "Transfers the specified amount of a token from the msg.sender to address(this)"
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "sweepToken(address,uint256)": {
            "notice": "Transfers the full amount of a token held by this contract to msg.sender"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "unwrapWETH9(uint256)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to msg.sender as ETH."
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "wrapETH(uint256)": {
            "notice": "Wraps the contract's ETH balance into WETH9"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mageswap/=node_modules/@mageswap/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/IPeripheryPaymentsExtended.sol": "IPeripheryPaymentsExtended"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IPeripheryPaymentsExtended.sol": {
        "keccak256": "0x185c756302175e8f8a5e39935c0426ea866768caa7315bffd67d9bb1edea8865",
        "urls": [
          "bzz-raw://d79bbc30538a82bb89d677e2fcf11126523349bbc4ce51624ddf01da93cd94d1",
          "dweb:/ipfs/QmQDWSX7UgGY3xLYQk2Vy3Z2o9XDHtz3QpkkUVFukpZWyV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@mageswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
        "urls": [
          "bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
          "dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IPeripheryPaymentsExtended.sol",
    "id": 2607,
    "exportedSymbols": {
      "IPeripheryPayments": [
        10487
      ],
      "IPeripheryPaymentsExtended": [
        2606
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1555:15",
    "nodes": [
      {
        "id": 2573,
        "nodeType": "PragmaDirective",
        "src": "45:24:15",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 2574,
        "nodeType": "ImportDirective",
        "src": "71:76:15",
        "nodes": [],
        "absolutePath": "node_modules/@mageswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "file": "@mageswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "scope": 2607,
        "sourceUnit": 10488,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2606,
        "nodeType": "ContractDefinition",
        "src": "261:1338:15",
        "nodes": [
          {
            "id": 2583,
            "nodeType": "FunctionDefinition",
            "src": "583:61:15",
            "nodes": [],
            "documentation": {
              "id": 2578,
              "nodeType": "StructuredDocumentation",
              "src": "326:252:15",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to msg.sender as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap"
            },
            "functionSelector": "49616997",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWETH9",
            "parameters": {
              "id": 2581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2580,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2583,
                  "src": "604:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:23:15"
            },
            "returnParameters": {
              "id": 2582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:15"
            },
            "scope": 2606,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2589,
            "nodeType": "FunctionDefinition",
            "src": "857:49:15",
            "nodes": [],
            "documentation": {
              "id": 2584,
              "nodeType": "StructuredDocumentation",
              "src": "650:202:15",
              "text": "@notice Wraps the contract's ETH balance into WETH9\n @dev The resulting WETH9 is custodied by the router, thus will require further distribution\n @param value The amount of ETH to wrap"
            },
            "functionSelector": "1c58db4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "wrapETH",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2589,
                  "src": "874:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "873:15:15"
            },
            "returnParameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:15"
            },
            "scope": 2606,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2597,
            "nodeType": "FunctionDefinition",
            "src": "1282:75:15",
            "nodes": [],
            "documentation": {
              "id": 2590,
              "nodeType": "StructuredDocumentation",
              "src": "912:365:15",
              "text": "@notice Transfers the full amount of a token held by this contract to msg.sender\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to msg.sender\n @param amountMinimum The minimum amount of token required for a transfer"
            },
            "functionSelector": "e90a182f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "1302:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "1317:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1301:38:15"
            },
            "returnParameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:0:15"
            },
            "scope": 2606,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2605,
            "nodeType": "FunctionDefinition",
            "src": "1536:61:15",
            "nodes": [],
            "documentation": {
              "id": 2598,
              "nodeType": "StructuredDocumentation",
              "src": "1363:168:15",
              "text": "@notice Transfers the specified amount of a token from the msg.sender to address(this)\n @param token The token to pull\n @param value The amount to pay"
            },
            "functionSelector": "f2d5d56b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pull",
            "parameters": {
              "id": 2603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2600,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2605,
                  "src": "1550:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2602,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2605,
                  "src": "1565:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1549:30:15"
            },
            "returnParameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:15"
            },
            "scope": 2606,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2576,
              "name": "IPeripheryPayments",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10487,
              "src": "301:18:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPeripheryPayments_$10487",
                "typeString": "contract IPeripheryPayments"
              }
            },
            "id": 2577,
            "nodeType": "InheritanceSpecifier",
            "src": "301:18:15"
          }
        ],
        "contractDependencies": [
          10487
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 2575,
          "nodeType": "StructuredDocumentation",
          "src": "149:112:15",
          "text": "@title Periphery Payments Extended\n @notice Functions to ease deposits and withdrawals of ETH and tokens"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          2606,
          10487
        ],
        "name": "IPeripheryPaymentsExtended",
        "scope": 2607
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 15
}